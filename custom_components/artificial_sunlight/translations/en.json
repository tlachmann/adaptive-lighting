{
  "title": "Artificial Sunlight",
  "config": {
    "step": {
      "user": {
        "title": "Choose a name for the Artificial Sunlight",
        "description": "Every instance can contain multiple lights!",
        "data": {
          "name": "Name"
        }
      }
    },
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_device%]"
    }
  },
  "options": {
    "step": {
      "init": {
        "title": "Artificial Sunlight options",
        "description": "All settings for a Artificial Sunlight component. The option names correspond with the YAML settings. No options are shown if you have this entry defined in YAML.",
        "data": {
          "lights": "lights",
          "initial_transition": "initial_transition, when lights go 'off' to 'on'",
          "interval": "interval, time between switch updates in seconds",
          "transition": "transition, in seconds",
          "max_brightness": "max_brightness, in %",
          "min_brightness": "min_brightness, in %",
          "min_color_temp": "min_color_temp, in Kelvin",
          "max_color_temp": "max_color_temp, in Kelvin",
          "dawn_color_temp": "colortemp at beginning of dawn",
          "sunrise_color_temp": "colortemp at sunrise",
          "sunset_color_temp": "colortemp at end of sunset",
          "dusk_color_temp": "colortemp at end of dusk",
          "extend_cct_rgb_color": "enables to extend color temparature for lights with color_temp and color feature",
          "prefer_rgb_color": "prefer_rgb_color, use 'rgb_color' over 'color_temp' when possible",
          "sleep_brightness": "sleep_brightness, in %",
          "sleep_color_temp": "sleep_color_temp, in Kelvin",
          "sleep_transition": "sleep_transition, when 'sleep_state' changes",
          "use_night_color_rgb": "enable Function to use a static color using setting 'night_color'",
          "night_color": "custom color at night",
          "twilight_stage": "twilight stage, can be 6, 12 or 18 degrees below horizon default: '6'",
          "landsacpe_horizon": "additional number of degrees of sun for horizon",
          "sunrise_offset": "sunrise_offset, in +/- seconds",
          "sunrise_time": "sunrise_time, in 'HH:MM:SS' format (if 'None', it uses the actual sunrise time at your location)",
          "sunset_offset": "sunset_offset, in +/- seconds",
          "sunset_time": "sunset_time, in 'HH:MM:SS' format (if 'None', it uses the actual sunset time at your location)",
          "only_once": "only_once, only adapt the lights when turning them on",
          "separate_turn_on_commands": "separate_turn_on_commands, for each attribute (color, brightness, etc.) in 'light.turn_on', required for some lights.",
          "take_over_control": "take_over_control, if anything but Artificial Sunlight calls 'light.turn_on' when a light is already on, stop adapting that light until it (or the switch) toggles off -> on.",
          "detect_non_ha_changes": "detect_non_ha_changes, detects all >5% changes made to the lights (also outside of HA), requires 'take_over_control' to be enabled (calls 'homeassistant.update_entity' every 'interval'!)"
        }
      }
    },
    "error": {
      "option_error": "Invalid option"
    }
  }
}
